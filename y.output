Terminals unused in grammar

   FOR
   AND
   OR
   NOT
   LSB
   RSB


Grammar

    0 $accept: program $end

    1 program: program stat
    2        | %empty

    3 stat: declaration
    4     | compound_stat
    5     | expression_stat
    6     | print_func
    7     | func_definition
    8     | func

    9 declaration: type ID ASGN expression SEMICOLON
   10            | type ID SEMICOLON

   11 type: INT
   12     | FLOAT
   13     | BOOL
   14     | STRING
   15     | VOID

   16 compound_stat: if_stat
   17              | while_stat

   18 if_stat: IF expression block
   19        | IF expression block ELSE block
   20        | IF expression block ELSE if_stat

   21 block: LCB program RCB

   22 while_stat: WHILE expression block

   23 expression_stat: expression SEMICOLON
   24                | ID assign_op expression SEMICOLON

   25 expression: comparison_expr

   26 comparison_expr: addition_expr
   27                | comparison_expr cmp_op addition_expr

   28 addition_expr: multiplication_expr
   29              | addition_expr add_op multiplication_expr

   30 multiplication_expr: postfix_expr
   31                    | multiplication_expr mul_op postfix_expr

   32 postfix_expr: parenthesis
   33             | parenthesis post_op

   34 parenthesis: constant
   35            | ID
   36            | TRUE
   37            | FALSE
   38            | LB expression RB

   39 cmp_op: MT
   40       | LT
   41       | MTE
   42       | LTE
   43       | EQ
   44       | NE

   45 add_op: ADD
   46       | SUB

   47 mul_op: MUL
   48       | DIV
   49       | MOD

   50 post_op: INC
   51        | DEC

   52 assign_op: ASGN
   53          | ADDASGN
   54          | SUBASGN
   55          | MULASGN
   56          | DIVASGN
   57          | MODASGN

   58 constant: I_CONST
   59         | F_CONST
   60         | QUOTA STR_CONST QUOTA

   61 print_func: PRINT LB ID RB SEMICOLON
   62           | PRINT LB QUOTA STR_CONST QUOTA RB SEMICOLON

   63 func_definition: type ID LB type_arguments RB func_block

   64 type_arguments: type_arguments COMMA arg
   65               | arg
   66               | %empty

   67 arg: type ID

   68 func_block: LCB program RCB
   69           | LCB program RET expression SEMICOLON RCB

   70 func: ID LB arguments RB SEMICOLON

   71 arguments: arguments COMMA ID
   72          | ID


Terminals, with rules where they appear

$end (0) 0
error (256)
PRINT (258) 61 62
IF (259) 18 19 20
ELSE (260) 19 20
FOR (261)
WHILE (262) 22
SEMICOLON (263) 9 10 23 24 61 62 69 70
ADD (264) 45
SUB (265) 46
MUL (266) 47
DIV (267) 48
MOD (268) 49
INC (269) 50
DEC (270) 51
MT (271) 39
LT (272) 40
MTE (273) 41
LTE (274) 42
EQ (275) 43
NE (276) 44
ASGN (277) 9 52
ADDASGN (278) 53
SUBASGN (279) 54
MULASGN (280) 55
DIVASGN (281) 56
MODASGN (282) 57
AND (283)
OR (284)
NOT (285)
LB (286) 38 61 62 63 70
RB (287) 38 61 62 63 70
LCB (288) 21 68 69
RCB (289) 21 68 69
LSB (290)
RSB (291)
COMMA (292) 64 71
RET (293) 69
QUOTA (294) 60 62
VOID (295) 15
INT (296) 11
FLOAT (297) 12
STRING (298) 14
BOOL (299) 13
ID (300) 9 10 24 35 61 63 67 70 71 72
I_CONST (301) 58
F_CONST (302) 59
STR_CONST (303) 60 62
TRUE (304) 36
FALSE (305) 37


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 1 21 68 69
stat (53)
    on left: 3 4 5 6 7 8, on right: 1
declaration (54)
    on left: 9 10, on right: 3
type (55)
    on left: 11 12 13 14 15, on right: 9 10 63 67
compound_stat (56)
    on left: 16 17, on right: 4
if_stat (57)
    on left: 18 19 20, on right: 16 20
block (58)
    on left: 21, on right: 18 19 20 22
while_stat (59)
    on left: 22, on right: 17
expression_stat (60)
    on left: 23 24, on right: 5
expression (61)
    on left: 25, on right: 9 18 19 20 22 23 24 38 69
comparison_expr (62)
    on left: 26 27, on right: 25 27
addition_expr (63)
    on left: 28 29, on right: 26 27 29
multiplication_expr (64)
    on left: 30 31, on right: 28 29 31
postfix_expr (65)
    on left: 32 33, on right: 30 31
parenthesis (66)
    on left: 34 35 36 37 38, on right: 32 33
cmp_op (67)
    on left: 39 40 41 42 43 44, on right: 27
add_op (68)
    on left: 45 46, on right: 29
mul_op (69)
    on left: 47 48 49, on right: 31
post_op (70)
    on left: 50 51, on right: 33
assign_op (71)
    on left: 52 53 54 55 56 57, on right: 24
constant (72)
    on left: 58 59 60, on right: 34
print_func (73)
    on left: 61 62, on right: 6
func_definition (74)
    on left: 63, on right: 7
type_arguments (75)
    on left: 64 65 66, on right: 63 64
arg (76)
    on left: 67, on right: 64 65
func_block (77)
    on left: 68 69, on right: 63
func (78)
    on left: 70, on right: 8
arguments (79)
    on left: 71 72, on right: 70 71


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stat

    $end     shift, and go to state 2
    PRINT    shift, and go to state 3
    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    VOID     shift, and go to state 8
    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    STRING   shift, and go to state 11
    BOOL     shift, and go to state 12
    ID       shift, and go to state 13
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    stat                 go to state 18
    declaration          go to state 19
    type                 go to state 20
    compound_stat        go to state 21
    if_stat              go to state 22
    while_stat           go to state 23
    expression_stat      go to state 24
    expression           go to state 25
    comparison_expr      go to state 26
    addition_expr        go to state 27
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31
    print_func           go to state 32
    func_definition      go to state 33
    func                 go to state 34


State 2

    0 $accept: program $end .

    $default  accept


State 3

   61 print_func: PRINT . LB ID RB SEMICOLON
   62           | PRINT . LB QUOTA STR_CONST QUOTA RB SEMICOLON

    LB  shift, and go to state 35


State 4

   18 if_stat: IF . expression block
   19        | IF . expression block ELSE block
   20        | IF . expression block ELSE if_stat

    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    ID       shift, and go to state 36
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    expression           go to state 37
    comparison_expr      go to state 26
    addition_expr        go to state 27
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31


State 5

   22 while_stat: WHILE . expression block

    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    ID       shift, and go to state 36
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    expression           go to state 38
    comparison_expr      go to state 26
    addition_expr        go to state 27
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31


State 6

   38 parenthesis: LB . expression RB

    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    ID       shift, and go to state 36
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    expression           go to state 39
    comparison_expr      go to state 26
    addition_expr        go to state 27
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31


State 7

   60 constant: QUOTA . STR_CONST QUOTA

    STR_CONST  shift, and go to state 40


State 8

   15 type: VOID .

    $default  reduce using rule 15 (type)


State 9

   11 type: INT .

    $default  reduce using rule 11 (type)


State 10

   12 type: FLOAT .

    $default  reduce using rule 12 (type)


State 11

   14 type: STRING .

    $default  reduce using rule 14 (type)


State 12

   13 type: BOOL .

    $default  reduce using rule 13 (type)


State 13

   24 expression_stat: ID . assign_op expression SEMICOLON
   35 parenthesis: ID .
   70 func: ID . LB arguments RB SEMICOLON

    ASGN     shift, and go to state 41
    ADDASGN  shift, and go to state 42
    SUBASGN  shift, and go to state 43
    MULASGN  shift, and go to state 44
    DIVASGN  shift, and go to state 45
    MODASGN  shift, and go to state 46
    LB       shift, and go to state 47

    $default  reduce using rule 35 (parenthesis)

    assign_op  go to state 48


State 14

   58 constant: I_CONST .

    $default  reduce using rule 58 (constant)


State 15

   59 constant: F_CONST .

    $default  reduce using rule 59 (constant)


State 16

   36 parenthesis: TRUE .

    $default  reduce using rule 36 (parenthesis)


State 17

   37 parenthesis: FALSE .

    $default  reduce using rule 37 (parenthesis)


State 18

    1 program: program stat .

    $default  reduce using rule 1 (program)


State 19

    3 stat: declaration .

    $default  reduce using rule 3 (stat)


State 20

    9 declaration: type . ID ASGN expression SEMICOLON
   10            | type . ID SEMICOLON
   63 func_definition: type . ID LB type_arguments RB func_block

    ID  shift, and go to state 49


State 21

    4 stat: compound_stat .

    $default  reduce using rule 4 (stat)


State 22

   16 compound_stat: if_stat .

    $default  reduce using rule 16 (compound_stat)


State 23

   17 compound_stat: while_stat .

    $default  reduce using rule 17 (compound_stat)


State 24

    5 stat: expression_stat .

    $default  reduce using rule 5 (stat)


State 25

   23 expression_stat: expression . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 26

   25 expression: comparison_expr .
   27 comparison_expr: comparison_expr . cmp_op addition_expr

    MT   shift, and go to state 51
    LT   shift, and go to state 52
    MTE  shift, and go to state 53
    LTE  shift, and go to state 54
    EQ   shift, and go to state 55
    NE   shift, and go to state 56

    $default  reduce using rule 25 (expression)

    cmp_op  go to state 57


State 27

   26 comparison_expr: addition_expr .
   29 addition_expr: addition_expr . add_op multiplication_expr

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 26 (comparison_expr)

    add_op  go to state 60


State 28

   28 addition_expr: multiplication_expr .
   31 multiplication_expr: multiplication_expr . mul_op postfix_expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 28 (addition_expr)

    mul_op  go to state 64


State 29

   30 multiplication_expr: postfix_expr .

    $default  reduce using rule 30 (multiplication_expr)


State 30

   32 postfix_expr: parenthesis .
   33             | parenthesis . post_op

    INC  shift, and go to state 65
    DEC  shift, and go to state 66

    $default  reduce using rule 32 (postfix_expr)

    post_op  go to state 67


State 31

   34 parenthesis: constant .

    $default  reduce using rule 34 (parenthesis)


State 32

    6 stat: print_func .

    $default  reduce using rule 6 (stat)


State 33

    7 stat: func_definition .

    $default  reduce using rule 7 (stat)


State 34

    8 stat: func .

    $default  reduce using rule 8 (stat)


State 35

   61 print_func: PRINT LB . ID RB SEMICOLON
   62           | PRINT LB . QUOTA STR_CONST QUOTA RB SEMICOLON

    QUOTA  shift, and go to state 68
    ID     shift, and go to state 69


State 36

   35 parenthesis: ID .

    $default  reduce using rule 35 (parenthesis)


State 37

   18 if_stat: IF expression . block
   19        | IF expression . block ELSE block
   20        | IF expression . block ELSE if_stat

    LCB  shift, and go to state 70

    block  go to state 71


State 38

   22 while_stat: WHILE expression . block

    LCB  shift, and go to state 70

    block  go to state 72


State 39

   38 parenthesis: LB expression . RB

    RB  shift, and go to state 73


State 40

   60 constant: QUOTA STR_CONST . QUOTA

    QUOTA  shift, and go to state 74


State 41

   52 assign_op: ASGN .

    $default  reduce using rule 52 (assign_op)


State 42

   53 assign_op: ADDASGN .

    $default  reduce using rule 53 (assign_op)


State 43

   54 assign_op: SUBASGN .

    $default  reduce using rule 54 (assign_op)


State 44

   55 assign_op: MULASGN .

    $default  reduce using rule 55 (assign_op)


State 45

   56 assign_op: DIVASGN .

    $default  reduce using rule 56 (assign_op)


State 46

   57 assign_op: MODASGN .

    $default  reduce using rule 57 (assign_op)


State 47

   70 func: ID LB . arguments RB SEMICOLON

    ID  shift, and go to state 75

    arguments  go to state 76


State 48

   24 expression_stat: ID assign_op . expression SEMICOLON

    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    ID       shift, and go to state 36
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    expression           go to state 77
    comparison_expr      go to state 26
    addition_expr        go to state 27
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31


State 49

    9 declaration: type ID . ASGN expression SEMICOLON
   10            | type ID . SEMICOLON
   63 func_definition: type ID . LB type_arguments RB func_block

    SEMICOLON  shift, and go to state 78
    ASGN       shift, and go to state 79
    LB         shift, and go to state 80


State 50

   23 expression_stat: expression SEMICOLON .

    $default  reduce using rule 23 (expression_stat)


State 51

   39 cmp_op: MT .

    $default  reduce using rule 39 (cmp_op)


State 52

   40 cmp_op: LT .

    $default  reduce using rule 40 (cmp_op)


State 53

   41 cmp_op: MTE .

    $default  reduce using rule 41 (cmp_op)


State 54

   42 cmp_op: LTE .

    $default  reduce using rule 42 (cmp_op)


State 55

   43 cmp_op: EQ .

    $default  reduce using rule 43 (cmp_op)


State 56

   44 cmp_op: NE .

    $default  reduce using rule 44 (cmp_op)


State 57

   27 comparison_expr: comparison_expr cmp_op . addition_expr

    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    ID       shift, and go to state 36
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    addition_expr        go to state 81
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31


State 58

   45 add_op: ADD .

    $default  reduce using rule 45 (add_op)


State 59

   46 add_op: SUB .

    $default  reduce using rule 46 (add_op)


State 60

   29 addition_expr: addition_expr add_op . multiplication_expr

    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    ID       shift, and go to state 36
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    multiplication_expr  go to state 82
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31


State 61

   47 mul_op: MUL .

    $default  reduce using rule 47 (mul_op)


State 62

   48 mul_op: DIV .

    $default  reduce using rule 48 (mul_op)


State 63

   49 mul_op: MOD .

    $default  reduce using rule 49 (mul_op)


State 64

   31 multiplication_expr: multiplication_expr mul_op . postfix_expr

    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    ID       shift, and go to state 36
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    postfix_expr  go to state 83
    parenthesis   go to state 30
    constant      go to state 31


State 65

   50 post_op: INC .

    $default  reduce using rule 50 (post_op)


State 66

   51 post_op: DEC .

    $default  reduce using rule 51 (post_op)


State 67

   33 postfix_expr: parenthesis post_op .

    $default  reduce using rule 33 (postfix_expr)


State 68

   62 print_func: PRINT LB QUOTA . STR_CONST QUOTA RB SEMICOLON

    STR_CONST  shift, and go to state 84


State 69

   61 print_func: PRINT LB ID . RB SEMICOLON

    RB  shift, and go to state 85


State 70

   21 block: LCB . program RCB

    $default  reduce using rule 2 (program)

    program  go to state 86


State 71

   18 if_stat: IF expression block .
   19        | IF expression block . ELSE block
   20        | IF expression block . ELSE if_stat

    ELSE  shift, and go to state 87

    $default  reduce using rule 18 (if_stat)


State 72

   22 while_stat: WHILE expression block .

    $default  reduce using rule 22 (while_stat)


State 73

   38 parenthesis: LB expression RB .

    $default  reduce using rule 38 (parenthesis)


State 74

   60 constant: QUOTA STR_CONST QUOTA .

    $default  reduce using rule 60 (constant)


State 75

   72 arguments: ID .

    $default  reduce using rule 72 (arguments)


State 76

   70 func: ID LB arguments . RB SEMICOLON
   71 arguments: arguments . COMMA ID

    RB     shift, and go to state 88
    COMMA  shift, and go to state 89


State 77

   24 expression_stat: ID assign_op expression . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 78

   10 declaration: type ID SEMICOLON .

    $default  reduce using rule 10 (declaration)


State 79

    9 declaration: type ID ASGN . expression SEMICOLON

    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    ID       shift, and go to state 36
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    expression           go to state 91
    comparison_expr      go to state 26
    addition_expr        go to state 27
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31


State 80

   63 func_definition: type ID LB . type_arguments RB func_block

    VOID    shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    STRING  shift, and go to state 11
    BOOL    shift, and go to state 12

    $default  reduce using rule 66 (type_arguments)

    type            go to state 92
    type_arguments  go to state 93
    arg             go to state 94


State 81

   27 comparison_expr: comparison_expr cmp_op addition_expr .
   29 addition_expr: addition_expr . add_op multiplication_expr

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59

    $default  reduce using rule 27 (comparison_expr)

    add_op  go to state 60


State 82

   29 addition_expr: addition_expr add_op multiplication_expr .
   31 multiplication_expr: multiplication_expr . mul_op postfix_expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 29 (addition_expr)

    mul_op  go to state 64


State 83

   31 multiplication_expr: multiplication_expr mul_op postfix_expr .

    $default  reduce using rule 31 (multiplication_expr)


State 84

   62 print_func: PRINT LB QUOTA STR_CONST . QUOTA RB SEMICOLON

    QUOTA  shift, and go to state 95


State 85

   61 print_func: PRINT LB ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 96


State 86

    1 program: program . stat
   21 block: LCB program . RCB

    PRINT    shift, and go to state 3
    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    LB       shift, and go to state 6
    RCB      shift, and go to state 97
    QUOTA    shift, and go to state 7
    VOID     shift, and go to state 8
    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    STRING   shift, and go to state 11
    BOOL     shift, and go to state 12
    ID       shift, and go to state 13
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    stat                 go to state 18
    declaration          go to state 19
    type                 go to state 20
    compound_stat        go to state 21
    if_stat              go to state 22
    while_stat           go to state 23
    expression_stat      go to state 24
    expression           go to state 25
    comparison_expr      go to state 26
    addition_expr        go to state 27
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31
    print_func           go to state 32
    func_definition      go to state 33
    func                 go to state 34


State 87

   19 if_stat: IF expression block ELSE . block
   20        | IF expression block ELSE . if_stat

    IF   shift, and go to state 4
    LCB  shift, and go to state 70

    if_stat  go to state 98
    block    go to state 99


State 88

   70 func: ID LB arguments RB . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 89

   71 arguments: arguments COMMA . ID

    ID  shift, and go to state 101


State 90

   24 expression_stat: ID assign_op expression SEMICOLON .

    $default  reduce using rule 24 (expression_stat)


State 91

    9 declaration: type ID ASGN expression . SEMICOLON

    SEMICOLON  shift, and go to state 102


State 92

   67 arg: type . ID

    ID  shift, and go to state 103


State 93

   63 func_definition: type ID LB type_arguments . RB func_block
   64 type_arguments: type_arguments . COMMA arg

    RB     shift, and go to state 104
    COMMA  shift, and go to state 105


State 94

   65 type_arguments: arg .

    $default  reduce using rule 65 (type_arguments)


State 95

   62 print_func: PRINT LB QUOTA STR_CONST QUOTA . RB SEMICOLON

    RB  shift, and go to state 106


State 96

   61 print_func: PRINT LB ID RB SEMICOLON .

    $default  reduce using rule 61 (print_func)


State 97

   21 block: LCB program RCB .

    $default  reduce using rule 21 (block)


State 98

   20 if_stat: IF expression block ELSE if_stat .

    $default  reduce using rule 20 (if_stat)


State 99

   19 if_stat: IF expression block ELSE block .

    $default  reduce using rule 19 (if_stat)


State 100

   70 func: ID LB arguments RB SEMICOLON .

    $default  reduce using rule 70 (func)


State 101

   71 arguments: arguments COMMA ID .

    $default  reduce using rule 71 (arguments)


State 102

    9 declaration: type ID ASGN expression SEMICOLON .

    $default  reduce using rule 9 (declaration)


State 103

   67 arg: type ID .

    $default  reduce using rule 67 (arg)


State 104

   63 func_definition: type ID LB type_arguments RB . func_block

    LCB  shift, and go to state 107

    func_block  go to state 108


State 105

   64 type_arguments: type_arguments COMMA . arg

    VOID    shift, and go to state 8
    INT     shift, and go to state 9
    FLOAT   shift, and go to state 10
    STRING  shift, and go to state 11
    BOOL    shift, and go to state 12

    type  go to state 92
    arg   go to state 109


State 106

   62 print_func: PRINT LB QUOTA STR_CONST QUOTA RB . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 107

   68 func_block: LCB . program RCB
   69           | LCB . program RET expression SEMICOLON RCB

    $default  reduce using rule 2 (program)

    program  go to state 111


State 108

   63 func_definition: type ID LB type_arguments RB func_block .

    $default  reduce using rule 63 (func_definition)


State 109

   64 type_arguments: type_arguments COMMA arg .

    $default  reduce using rule 64 (type_arguments)


State 110

   62 print_func: PRINT LB QUOTA STR_CONST QUOTA RB SEMICOLON .

    $default  reduce using rule 62 (print_func)


State 111

    1 program: program . stat
   68 func_block: LCB program . RCB
   69           | LCB program . RET expression SEMICOLON RCB

    PRINT    shift, and go to state 3
    IF       shift, and go to state 4
    WHILE    shift, and go to state 5
    LB       shift, and go to state 6
    RCB      shift, and go to state 112
    RET      shift, and go to state 113
    QUOTA    shift, and go to state 7
    VOID     shift, and go to state 8
    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    STRING   shift, and go to state 11
    BOOL     shift, and go to state 12
    ID       shift, and go to state 13
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    stat                 go to state 18
    declaration          go to state 19
    type                 go to state 20
    compound_stat        go to state 21
    if_stat              go to state 22
    while_stat           go to state 23
    expression_stat      go to state 24
    expression           go to state 25
    comparison_expr      go to state 26
    addition_expr        go to state 27
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31
    print_func           go to state 32
    func_definition      go to state 33
    func                 go to state 34


State 112

   68 func_block: LCB program RCB .

    $default  reduce using rule 68 (func_block)


State 113

   69 func_block: LCB program RET . expression SEMICOLON RCB

    LB       shift, and go to state 6
    QUOTA    shift, and go to state 7
    ID       shift, and go to state 36
    I_CONST  shift, and go to state 14
    F_CONST  shift, and go to state 15
    TRUE     shift, and go to state 16
    FALSE    shift, and go to state 17

    expression           go to state 114
    comparison_expr      go to state 26
    addition_expr        go to state 27
    multiplication_expr  go to state 28
    postfix_expr         go to state 29
    parenthesis          go to state 30
    constant             go to state 31


State 114

   69 func_block: LCB program RET expression . SEMICOLON RCB

    SEMICOLON  shift, and go to state 115


State 115

   69 func_block: LCB program RET expression SEMICOLON . RCB

    RCB  shift, and go to state 116


State 116

   69 func_block: LCB program RET expression SEMICOLON RCB .

    $default  reduce using rule 69 (func_block)
